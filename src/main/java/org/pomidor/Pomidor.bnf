{
  parserClass="org.pomidor.parser.PomidorParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Pomidor"
  psiImplClassSuffix="Impl"
  psiPackage="org.pomidor.psi"
  psiImplPackage="org.pomidor.psi.impl"

  elementTypeHolderClass="org.pomidor.psi.PomidorTypes"
  elementTypeClass="org.pomidor.psi.PomidorElementType"
  tokenTypeClass="org.pomidor.psi.PomidorTokenType"

//  psiImplUtilClass="org.pomidor.psi.impl.PomidorPsiImplUtil"

tokens=[
//    TEXT='regexp:[^ ,:;|\t\f\r\n"\\]+'
//    ESCAPED_TEXT='regexp:[,:;|\t\r\n]|""|\\"'
//    ESCAPE_CHARACTER='regexp:\\'
//    SEPARATOR='regexp:[:-]* | [\t\f]+ '
//    QUOTE='regexp:"'
//    CRLF='regexp:[\r\n]'
//    EMPTY_LINE='regexp:^\s+$'
//    EMPTY_LINE='regexp:^[ \t\n]+'
//    COMMENT='regexp:!.*(\n)'
//    FEATURE= "@feature "
//    DATA= "@data "
//    url= '@url '
//    PRO='regexp:"""'
//    ACTION='regexp:\*.*(\s|$)'
//    OBJECT='regexp:#.(^[A-Za-z]+$)'
//    CODE="regexp:.*\{CRLF}"
//    VALUE="regexp:.*"


   ]

}
 file ::= file_element_outer* <<eof>> { pin=1 }
 private file_element_outer::= file_element
//   {recoverWhile=root_recover} private root_recover::=!(eol)

 private file_element ::=
                 (comment            |
                  eol                |
                  marker             |
                  paragraph)

marker::= marker_name marker_values {pin=1}
marker_name ::= feature | data | url

marker_values ::= marker_value (punctuation marker_value)*

paragraph ::= ((identifier | action | page_object | static_data | data_feed | code_block) punctuation?)+
page_object ::= page_object_marker identifier
static_data ::= static_data_left_marker (identifier | punctuation)+ static_data_right_marker
data_feed ::= data_feed_left_marker (identifier | punctuation)+ data_feed_right_marker
code_block ::= code_block_left_marker code_source code_block_right_marker
